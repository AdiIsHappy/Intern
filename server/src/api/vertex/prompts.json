{
  "report": {
    "insight": "You are given a JSON formatted dataset containing an analysis of either authored merge requests by a GitLab user or comments on those merge requests over a fixed time period. Analyze this data and identify insights. Provide a list of insights, limited to 5 points maximum and each insight of maximum 15 words. For each insight, mention 1 to 3 merge request IDs to back it up. Do not reuse merge request IDs. Use markdown to bold necessary characters between ** and **. Format the output as a JSON object with the 'i' key containing an array of objects with 't' and 'ids' keys. Ensure the output is raw JSON that can be directly parsed without any formatting and newlines. Here is a sample output:\n\n{ \"i\": [ { \"t\": \"Your **typescript** code reviews show a solid understanding of best practices.\", \"ids\": [ \"gid://gitlab/MergeRequest/314323396\", \"gid://gitlab/MergeRequest/314013485\" ] }, { \"t\": \"Improvement seen in **commits** with well-documented code.\", \"ids\": [ \"gid://gitlab/MergeRequest/314321123\" ] } ] }",
    "actions": "You are given a JSON formatted dataset containing an analysis of either authored merge requests by a GitLab user or comments on those merge requests over a fixed time period. Based on the data, provide a list of actions the user should take to improve their performance. These can be learning something or changing the way the user does something. If required, provide 1 to 3 learning resources for each action. Limit the actions to 5 points maximum, with each action of maximum 15 words. Use markdown to bold necessary characters between ** and **. Format the output as a JSON object with the 'a' key containing an array of objects with 't' and 'refs' keys. Ensure the output is raw JSON that can be directly parsed without any formatting and newlines. Here is a sample output:{ \"a\": [ { \"t\": \"You should focus on writing clear and concise **merge request descriptions**.\", \"refs\": [ { \"te\": \"Merge Request Guide\", \"url\": \"https://docs.gitlab.com/ee/user/project/merge_requests/creating_merge_requests.html\", \"s\": \"Merge Request\", \"de\": \"Official guide on creating merge requests.\" } ] }, { \"t\": \"Learn about best practices for writing **code comments**.\", \"refs\": [ { \"te\": \"Code Commenting Guide\", \"url\": \"https://www.codecademy.com/articles/how-to-comment-code\", \"s\": \"Code Comments\", \"de\": \"Guide on writing effective code comments.\" } ] } ] }",
    "positiveSkills": "You are given a JSON formatted dataset containing an analysis of either authored merge requests by a GitLab user or comments on those merge requests over a fixed time period. Limit the number of skills to a maximum of 5. Identify the user's positive skills where they are performing well or have shown improvement. For each skill, count the total occurrences in both merge requests and related comments, sentiment-wise frequency grouped by specified periods, and insights. Foreach insight Include 3 to 5 merge request IDs to back it up. Each skill's insights should be formatted as an array with a 4 to 7 very short and crisp points of maximum length 15 words. Use markdown to bold necessary characters between ** and **. Format the output as a JSON object with the 'ps' key containing an array of skill objects. Ensure the output is raw JSON that can be directly parsed without any formatting and newlines. Here is a sample output:\n\n{ \"ps\": [ { \"s\": \"JavaScript\", \"f\": { \"2024-01-01T00:00:00.000+05:30\": 0, \"2024-02-01T00:00:00.000+05:30\": 1, \"2024-03-01T00:00:00.000+05:30\": 6 }, \"sf\": { \"2024-01-01T00:00:00.000+05:30\": { \"p\": 0, \"n\": 0, \"ne\": 0 }, \"2024-02-01T00:00:00.000+05:30\": { \"p\": 0, \"n\": 1, \"ne\": 0 }, \"2024-03-01T00:00:00.000+05:30\": { \"p\": 5, \"n\": 0, \"ne\": 1 } }, \"i\": [ { \"t\": \"Your **Eslint** configuration is effective and well-implemented.\", \"ids\": [ \"gid://gitlab/MergeRequest/314018479\" ] }, { \"t\": \"Positive feedback on your recent **frontend** work shows improvement.\", \"ids\": [ \"gid://gitlab/MergeRequest/312842396\", \"gid://gitlab/MergeRequest/308394629\" ] } ] } ] }",
    "negativeSkills": "You are provided with a JSON dataset containing either authored merge requests by a GitLab user or comments on those merge requests over a specific period. Your task is to identify key areas where the user can enhance their skills and knowledge. Limit the identification to a maximum of 5 skills. For each identified skill, perform the following steps: 1) Calculate the total occurrences of the skill in both merge requests and related comments. 2) Group the occurrences by sentiment (positive, neutral, improvement suggested) and by specified time periods. 3) Provide detailed insights highlighting specific suggestions for improvement and skill development. Include 3 to 5 merge request IDs to support your findings. 4) List 1 to 3 references of learning resources for each skill to assist the user in enhancing their abilities. Each skill's insights should be formatted as an array with 4 to 7 brief points, each no longer than 15 words. Use markdown to **bold** important characters. Format the output as a JSON object with the 'ns' key containing an array of skill objects. Ensure the output is raw JSON without any additional formatting or newlines. Here is an example output:\n\n{\"ns\": [{\"s\": \"Python\", \"f\": {\"2024-01-01T00:00:00.000+05:30\": 2, \"2024-02-01T00:00:00.000+05:30\": 3, \"2024-03-01T00:00:00.000+05:30\": 5 }, \"sf\": {\"2024-01-01T00:00:00.000+05:30\": { \"p\": 0, \"n\": 2, \"is\": 0 }, \"2024-02-01T00:00:00.000+05:30\": { \"p\": 1, \"n\": 2, \"is\": 0 }, \"2024-03-01T00:00:00.000+05:30\": { \"p\": 3, \"n\": 1, \"is\": 1 }}, \"i\": [{ \"t\": \"Frequent errors in **Pandas** dataframe operations, consider revisiting documentation.\", \"ids\": [\"gid://gitlab/MergeRequest/412842390\", \"gid://gitlab/MergeRequest/408387629\"] }, { \"t\": \"Incorrect use of **lambda** functions.\", \"ids\": [\"gid://gitlab/MergeRequest/414324396\"] }], \"refs\": [{ \"te\": \"Pandas Documentation\", \"url\": \"https://pandas.pydata.org/docs/\", \"s\": \"Python\", \"de\": \"Comprehensive guide to Pandas.\" }] } ]}"
  },

  "combine": {
    "insight": "You are given a JSON formatted dataset containing an analysis of authored merge requests by a GitLab user and comments on those merge requests over a fixed time period. Combine the insights from both analyses into a single comprehensive report. Ensure that similar insights and points are merged into one. Provide the output as a JSON object that can be easily parsed directly, with no formatting or newlines. Limit the total number of insights to 5. Use markdown to bold necessary characters between ** and **. The structure should follow the example format provided below, but ensure the output is raw JSON:\n{\n  \"i\": [\n    {\n      \"t\": \"Insight text here.\",\n      \"ids\": [\"Merge request ID 1\", \"Merge request ID 2\"]\n    }\n  ]\n}",
    "positiveSkills": "You are given a JSON formatted dataset containing an analysis of authored merge requests by a GitLab user and comments on those merge requests over a fixed time period. Combine the positive skills identified from both analyses into a single comprehensive report. Ensure that similar skills are merged into one. Provide the output as a JSON object that can be easily parsed directly, with no formatting or newlines. Limit the total number of positive skills to 5. Use markdown to bold necessary characters between ** and **. The structure should follow the example format provided below, but ensure the output is raw JSON:\n{\n  \"ps\": [\n    {\n      \"s\": \"Skill name\",\n      \"f\": {\n        \"timestamp\": value\n      },\n      \"sf\": {\n        \"timestamp\": {\n          \"p\": value,\n          \"n\": value,\n          \"ne\": value\n        }\n      },\n      \"i\": [\n        {\n          \"t\": \"Insight text here.\",\n          \"ids\": [\"Merge request ID 1\", \"Merge request ID 2\"]\n      }\n    }\n  ]\n}",
    "negativeSkills": "You are given a JSON formatted dataset containing an analysis of authored merge requests by a GitLab user and comments on those merge requests over a fixed time period. Combine the negative skills identified from both analyses into a single comprehensive report. Ensure that similar skills are merged into one. Provide the output as a JSON object that can be easily parsed directly, with no formatting or newlines. Limit the total number of negative skills to 5. Use markdown to bold necessary characters between ** and **. The structure should follow the example format provided below, but ensure the output is raw JSON:\n{\n  \"ns\": [\n    {\n      \"s\": \"Skill name\",\n      \"f\": {\n        \"timestamp\": value\n      },\n      \"sf\": {\n        \"timestamp\": {\n          \"p\": value,\n          \"n\": value,\n          \"ne\": value\n        }\n      },\n      \"i\": [\n        {\n          \"t\": \"Insight text here.\",\n          \"ids\": [\"Merge request ID 1\", \"Merge request ID 2\"]\n      ],\n      \"refs\": [\n        {\n          \"te\": \"Reference title\",\n          \"url\": \"Reference URL\",\n          \"s\": \"Skill name\",\n          \"de\": \"Reference description\"\n        }\n      ]\n    }\n  ]\n}",
    "actions": "You are given a JSON formatted dataset containing an analysis of authored merge requests by a GitLab user and comments on those merge requests over a fixed time period. Combine the actions suggested from both analyses into a single comprehensive report. Ensure that similar actions are merged into one. Provide the output as a JSON object that can be easily parsed directly, with no formatting or newlines. Limit the total number of actions to 5. Use markdown to bold necessary characters between ** and **. The structure should follow the example format provided below, but ensure the output is raw JSON:\n{\n  \"a\": [\n    {\n      \"t\": \"Action text here.\",\n      \"refs\": [\n        {\n          \"te\": \"Reference title\",\n          \"url\": \"Reference URL\",\n          \"s\": \"Skill name\",\n          \"de\": \"Reference description\"\n        }\n      ]\n    }\n  ]\n}"
  },

  "analysis": {
    "comment": "You are an expert at analyzing GitLab comments to extract detailed technical information. Your task is to review each comment and provide a structured analysis. For each comment, return the following information in JSON format: 1. Type of Feedback to Merge Request Author: Categorize as \"Positive,\" \"Negative,\" or \"Neutral.\" \"Positive\" for appreciation or positive feedback, \"Negative\" for mistakes or negative sentiment, and \"Neutral\" for general discussions or references. 2. Keywords: Extract and list keywords of significant technical importance from the comment. Limit keywords to a maximum of 2 words. 3. Skills: Identify relevant skills from the comment, including concepts of programming languages (e.g., encapsulation, generic classes, conditional statements), frameworks (e.g., hooks in React, data fetching), and other specific technical concepts. Provide feedback for each skill indicating if it is \"Positive,\" \"Negative,\" or \"Neutral.\" 4. Summary: A brief summary of the comment, highlighting any mistakes or improvements. Output the analysis in a compact JSON format suitable for direct parsing without additional spaces or newlines: [ {\"id\":\"\",\"feedback\":\"\",\"keywords\":[],\"skills\":[{\"skill\":\"\",\"feedback\":\"\"}],\"summary\":\"\"} ]",
    "mergeRequest": "You are given a list of GitLab's merge request information. For each merge request, the provided information includes: - ID - Title - Description - List of labels - Upvotes - Downvotes - Conflicts - List of changes in files as diffstats Your task is to analyze this information and provide the following details: 1. Impact of Merge Request to Repository: This can be \"Positive,\" \"Negative,\" or \"Neutral.\" You can use vote counts along with other relevant information to determine the impact. 2. Quality of merge request: This can be \"High,\" \"Medium,\" or \"Low\". Consider how well the user described the changes made. 3. Keywords: Extract keywords with highly significant technical importance and relevance to developers, if any. 4. Skills: Identify skills relevant to the merge request. The skills must be relevant from a developer's perspective, including concepts of programming languages (e.g., encapsulation, generic classes, conditional statements), frameworks (e.g., hooks in React, data fetching), and other specific technical concepts. For each skill, provide feedback type for the merge request author, which can be one of \"Positive,\" \"Negative,\" or \"Neutral.\" 5. Test Analysis: - testRequired: A boolean value indicating if there is a need to add tests based on the changes in the merge request. - tests: An object indicating the count of added, modified, or removed tests. Format: {added: 0, removed: 0, modified: 0}. Use changes in diffs to determine this. 6. Summary: A very short description of user learning, mentioning any mistakes or improvements the user made. Output should be in the following JSON format for each merge request: [ {\"id\":\"\",\"keywords\":[],\"quality\":\"\",\"skills\":[{\"skill\":\"\",\"feedback\":\"\"}],\"impact\":\"\",\"testRequired\":false,\"tests\":{\"added\":0,\"removed\":0,\"modified\":0},\"summary\":\"\"} ] Note: Make the JSON as small as possible. There is no need to add additional spaces or newlines, ensuring that it can be directly parsed using the JSON.parse() method of JavaScript.",
    "formal": "You are given a list of comments along with an ID. Your task is to analyze each comment and rewrite it in a more formal way while maintaining the sentiment, nuances, emotions, or specific details that could be important. Notes: 1. Make the JSON list as small as possible, with no additional spaces or newlines, and ensure that it can be parsed by the default TypeScript JSON parser. 2. If there are URLs or code in the comment, format them so they are easy to understand near the end of the comment. Output a list in the following JSON format: [{\"id\":\"\",\"body\":\"\"}] Ensure the output JSON list is minimal and correctly formatted."
  }
}
