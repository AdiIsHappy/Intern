{
  "report": {
    "insight": "You are given a JSON formatted dataset containing an analysis of either authored merge requests by a GitLab user or comments on those merge requests over a fixed time period. Analyze this data and identify insights. Provide a list of insights, limited to 5 points maximum and each insight of maximum 15 words. For each insight, mention 1 to 3 merge request or comment IDs to back it up seperately in ids section. Do not reuse merge request IDs. Use markdown to bold necessary characters between ** and **. Format the output as a JSON object with the 'i' key containing an array of objects with 't' and 'ids' keys. Ensure the output is raw JSON that can be directly parsed without any formatting and newlines. Here is a sample output:\n\n{ \"i\": [ { \"t\": \"Your **typescript** code reviews show a solid understanding of best practices.\", \"ids\": [ \"gid://gitlab/MergeRequest/314323396\", \"gid://gitlab/DiffNote/1947434380\" ] }, { \"t\": \"Improvement seen in **commits** with well-documented code.\", \"ids\": [ \"gid://gitlab/MergeRequest/314321123\" ] } ] }",
    "actions": "You are given a JSON formatted dataset containing an analysis of either authored merge requests by a GitLab user or comments on those merge requests over a fixed time period. Based on the data, provide a list of actions the user should take to improve their performance. These can be learning something or changing the way the user does something. If required, provide 1 to 3 learning resources for each action. Limit the actions to 5 points maximum, with each action of maximum 15 words. Use markdown to bold necessary characters between ** and **. Format the output as a JSON object with the 'a' key containing an array of objects with 't' and 'refs' keys. Ensure the output is raw JSON that can be directly parsed without any formatting and newlines. Here is a sample output:{ \"a\": [ { \"t\": \"You should focus on writing clear and concise **merge request descriptions**.\", \"refs\": [ { \"te\": \"Merge Request Guide\", \"url\": \"https://docs.gitlab.com/ee/user/project/merge_requests/creating_merge_requests.html\", \"s\": \"Merge Request\", \"de\": \"Official guide on creating merge requests.\" } ] }, { \"t\": \"Learn about best practices for writing **code comments**.\", \"refs\": [ { \"te\": \"Code Commenting Guide\", \"url\": \"https://www.codecademy.com/articles/how-to-comment-code\", \"s\": \"Code Comments\", \"de\": \"Guide on writing effective code comments.\" } ] } ] }",
    "positiveSkillsMR": "You are given a JSON data containing analysis of authored merge requests but a given GitLab user over a fixed time period along with a list of start of time periods date. your task is to analyse this data and produce the following.\n\nIdentify the positive skills of user in which user is showing great performance, receiving appreciations etc.. Merge similar skills together (example Android and Android Developemnt can be merged). Limit the number. of skills identified to 5. for each identified skill provide following things.\n\n1) Calculate total occurrence of the skill in all merge requests.\n2) group the occurrence of these skills by sentiment (positive, negative, neutral) and the specified time period.\n3) Provide 3 to 5 detailed insights highlighting specific areas of excellence and positive performance. Include 3 to 5 merge request IDs to support your findings.\n\nEach skill's insights should be formatted as an array with 4 to 7 brief points, each no longer than 15 words. Use markdown to **bold** important characters. Format the output as a JSON object with the 'ps' key containing an array of skill objects.\n\nEnsure the output is raw JSON.\n\nHere is an example output:\n{\n  \"ps\": [\n    {\n      \"s\": \"Javascript\",\n      \"f\": {\n        \"2024-01-01T00:00:00.000+05:30\": 0,\n        \"2024-02-01T00:00:00.000+05:30\": 1,\n        \"2024-03-01T00:00:00.000+05:30\": 6\n      },\n      \"sf\": {\n        \"2024-01-01T00:00:00.000+05:30\": { \"p\": 0, \"n\": 0, \"ex\": 0 },\n        \"2024-02-01T00:00:00.000+05:30\": { \"p\": 0, \"n\": 1, \"ex\": 0 },\n        \"2024-03-01T00:00:00.000+05:30\": { \"p\": 5, \"n\": 0, \"ex\": 1 }\n      },\n      \"i\": [\n        {\n          \"t\": \"Your **Eslint** configuration is effective and well-implemented.\",\n          \"ids\": [\"gid://gitlab/MergeRequest/314018479\"]\n        },\n        {\n          \"t\": \"Positive feedback on your recent **frontend** work shows improvement.\",\n          \"ids\": [\n            \"gid://gitlab/MergeRequest/312842396\",\n            \"gid://gitlab/MergeRequest/308394629\"\n          ]\n        }\n      ]\n    }\n  ]\n}",
    "positiveSkillsNote": "You are given a JSON data containing analysis of comments on authored merge requests but a given GitLab user over a fixed time period along with a list of start of time periods date. your task is to analyse this data and produce the following.\n\nIdentify the positive skills of user in which user is showing great performance, receiving appreciations etc.. Merge similar skills together (example Android and Android Developemnt can be merged). provide minimum 0 and maximium 5 sills. for each identified skill provide following things.\n\n1) Calculate total occurrence of the skill in all merge requests.\n2) group the occurrence of these skills by sentiment (positive, negative, neutral) and the specified time period.\n3) Provide 3 to 5 detailed insights highlighting specific areas of excellence and positive performance. Include 3 to 5 comment IDs to support your findings.\n\nEach skill's insights should be formatted as an array with 4 to 7 brief points, each no longer than 15 words. Use markdown to **bold** important characters. Format the output as a JSON object with the 'ps' key containing an array of skill objects.\n\nEnsure the output is raw JSON.\n\nHere is an example output:\n{\n  \"ps\": [\n    {\n      \"s\": \"Javascript\",\n      \"f\": {\n        \"2024-01-01T00:00:00.000+05:30\": 0,\n        \"2024-02-01T00:00:00.000+05:30\": 1,\n        \"2024-03-01T00:00:00.000+05:30\": 6\n      },\n      \"sf\": {\n        \"2024-01-01T00:00:00.000+05:30\": { \"p\": 0, \"n\": 0, \"ex\": 0 },\n        \"2024-02-01T00:00:00.000+05:30\": { \"p\": 0, \"n\": 1, \"ex\": 0 },\n        \"2024-03-01T00:00:00.000+05:30\": { \"p\": 5, \"n\": 0, \"ex\": 1 }\n      },\n      \"i\": [\n        {\n          \"t\": \"Your **Eslint** configuration is effective and well-implemented.\",\n          \"ids\": [\"gid://gitlab/DiscussionNote/1968290680\"]\n        },\n        {\n          \"t\": \"Positive feedback on your recent **frontend** work shows improvement.\",\n          \"ids\": [\n            \"gid://gitlab/DiscussionNote/1968459995\",\n            \"gid://gitlab/DiffNote/1947434380\"\n          ]\n        }\n      ]\n    }\n  ]\n}",
    "negativeSkillsNote": "You are given a JSON data containing analysis of comments on authored merge requests but a given GitLab user over a fixed time period along with a list of start of time periods date and the  skills identifed as positive skill, i.e. skills in which user is showing great performance, receiving appreciations etc.. your task is to analyse this data and produce the following.\n\nIdentify the negative skills of user in which user is underperforming, making mistakes, getting negative revies etc. Merge similar skills together (example Android and Android Developemnt can be merged) and ensure that positive skills and negative skills do not overlap. provide minimum 1 and maximium 5 skills. for each identified skill provide following things.\n\n1) Calculate total occurrence of the skill in all merge requests.\n2) group the occurrence of these skills by sentiment (positive, negative, neutral) and the specified time period.\n3) Provide 3 to 5 detailed insights highlighting specific areas of mistake and requirement of improvements, requirement for improvements and negative reviews. Include 3 to 5 comment IDs to support your findings.\n4) List 1 to 3 references of learning resources for each skill to assist the user in enhancing their abilities in week areas.\n\nEach skill's insights should be formatted as an array with 4 to 7 brief points, each no longer than 15 words. Use markdown to **bold** important characters. Format the output as a JSON object with the 'ns' key containing an array of skill objects.\n\nEnsure the output is raw JSON.\n\nHere is an example output:\n{\n  \"ns\": [\n    {\n      \"s\": \"Typescript\",\n      \"f\": {\n        \"2024-01-01T00:00:00.000+05:30\": 0,\n        \"2024-02-01T00:00:00.000+05:30\": 1,\n        \"2024-03-01T00:00:00.000+05:30\": 6\n      },\n      \"sf\": {\n        \"2024-01-01T00:00:00.000+05:30\": { \"p\": 0, \"n\": 0, \"ex\": 0 },\n        \"2024-02-01T00:00:00.000+05:30\": { \"p\": 0, \"n\": 1, \"ex\": 0 },\n        \"2024-03-01T00:00:00.000+05:30\": { \"p\": 1, \"n\": 0, \"ex\": 5 }\n      },\n      \"i\": [\n        {\n          \"t\": \"Your **interface definations** are causing clashes for other users definations.\",\n          \"ids\": [\"gid://gitlab/DiscussionNote/1968290680\"]\n        },\n        {\n          \"t\": \"your logics in recent merge requests are not **performance optimised**\",\n          \"ids\": [\n            \"gid://gitlab/DiscussionNote/1968459995\",\n            \"gid://gitlab/DiffNote/1947434380\"\n          ]\n        }\n      ],\n      \"refs\": [\n        {\n          \"te\": \"TypeScriptâ€™s Logical Toolbox\",\n          \"url\": \"https://medium.com/codex/typescripts-logical-toolbox-a-step-by-step-guide-to-logical-statements-such-as-if-else-if-and-cb15796e2482\",\n          \"s\": \"Typescript\",\n          \"de\": \" A Step-by-Step Guide to Logical Statements such as if, else if, and else; Implementation of Logical Operators; and Enhancing Code Efficiency via Conditional Ternary Operators\"\n        }\n      ]\n    }\n  ]\n}",
    "negativeSkillsMR": "You are given a JSON data containing analysis of authored merge requests but a given GitLab user over a fixed time period along with a list of start of time periods date and the  skills identifed as positive skill, i.e. skills in which user is showing great performance, receiving appreciations etc.. your task is to analyse this data and produce the following.\n\nIdentify the negative skills of user in which user is underperforming, making mistakes, getting negative revies etc. Merge similar skills together (example Android and Android Developemnt can be merged) and ensure that positive skills and negative skills do not overlap. provide minimum 1 and maximium 5 skills. for each identified skill provide following things.\n\n1) Calculate total occurrence of the skill in all merge requests.\n2) group the occurrence of these skills by sentiment (positive, negative, neutral) and the specified time period.\n3) Provide 3 to 5 detailed insights highlighting specific areas of mistake, requirement for improvements and negative reviews. Include 3 to 5 merge request IDs to support your findings.\n4) List 1 to 3 references of learning resources for each skill to assist the user in enhancing their abilities in week areas.\n\nEach skill's insights should be formatted as an array with 4 to 7 brief points, each no longer than 15 words. Use markdown to **bold** important characters. Format the output as a JSON object with the 'ns' key containing an array of skill objects.\n\nEnsure the output is raw JSON.\n\nHere is an example output:\n{\n  \"ns\": [\n    {\n      \"s\": \"Typescript\",\n      \"f\": {\n        \"2024-01-01T00:00:00.000+05:30\": 0,\n        \"2024-02-01T00:00:00.000+05:30\": 1,\n        \"2024-03-01T00:00:00.000+05:30\": 6\n      },\n      \"sf\": {\n        \"2024-01-01T00:00:00.000+05:30\": { \"p\": 0, \"n\": 0, \"ex\": 0 },\n        \"2024-02-01T00:00:00.000+05:30\": { \"p\": 0, \"n\": 1, \"ex\": 0 },\n        \"2024-03-01T00:00:00.000+05:30\": { \"p\": 1, \"n\": 0, \"ex\": 5 }\n      },\n      \"i\": [\n        {\n          \"t\": \"Your **interface definations** are causing clashes for other users definations.\",\n          \"ids\": [\"gid://gitlab/MergeRequest/314018479\"]\n        },\n        {\n          \"t\": \"your logics in recent merge requests are not **performance optimised**\",\n          \"ids\": [\n            \"gid://gitlab/MergeRequest/312842396\",\n            \"gid://gitlab/MergeRequest/308394629\"\n          ]\n        }\n      ],\n      \"refs\": [\n        {\n          \"te\": \"TypeScriptâ€™s Logical Toolbox\",\n          \"url\": \"https://medium.com/codex/typescripts-logical-toolbox-a-step-by-step-guide-to-logical-statements-such-as-if-else-if-and-cb15796e2482\",\n          \"s\": \"Typescript\",\n          \"de\": \" A Step-by-Step Guide to Logical Statements such as if, else if, and else; Implementation of Logical Operators; and Enhancing Code Efficiency via Conditional Ternary Operators\"\n        }\n      ]\n    }\n  ]\n}"
  },

  "combine": {
    "positiveSkills": "You are given a JSON data containing analysis of authored merge requests of a given GitLab user over a fixed time period along with analysis of comments on those merge requests. Your task is to combine the skills identified where user is showing great performance and reciving appreciations from both analysis into a single comprehensive list of skills. Ensure that similar skills are merged into one. you have to provide following in the final list. Limit number of skills to 5.\nfor each skill do the following.\n1) Calculate total occurrence of the skill in all merge requests.\n2) group the occurrence of these skills by sentiment (positive, negative, neutral) and the specified time period.\n3) Provide detailed 3 to 5 insights highlighting specific areas of excellence and positive performance. Include 3 to 5 merge request or comments IDs to support your findings.\n4) List 1 to 3 references of learning resources for each skill to assist the user in enhancing their abilities in week areas.\nEach skill's insights should be formatted as an array with 4 to 7 brief points, each no longer than 15 words. Use markdown to **bold** important characters. Format the output as a JSON object with the 'ps' key containing an array of skill objects.\nEnsure the output is raw JSON.\nHere is an example output:\n{\n  \"ps\": [\n    {\n      \"s\": \"Typescript\",\n      \"f\": {\n        \"2024-01-01T00:00:00.000+05:30\": 0,\n        \"2024-02-01T00:00:00.000+05:30\": 1,\n        \"2024-03-01T00:00:00.000+05:30\": 6\n      },\n      \"sf\": {\n        \"2024-01-01T00:00:00.000+05:30\": { \"p\": 0, \"n\": 0, \"ex\": 0 },\n        \"2024-02-01T00:00:00.000+05:30\": { \"p\": 0, \"n\": 1, \"ex\": 0 },\n        \"2024-03-01T00:00:00.000+05:30\": { \"p\": 5, \"n\": 0, \"ex\": 1 }\n      },\n      \"i\": [\n        {\n          \"t\": \"Your **interface definations** are being appreciated by the team\",\n          \"ids\": [\"gid://gitlab/MergeRequest/314018479\"]\n        },\n        {\n          \"t\": \"your logics in recent merge requests very **performance optimised** and **clean**\",\n          \"ids\": [\n            \"gid://gitlab/MergeRequest/312842396\",\n            \"gid://gitlab/MergeRequest/308394629\"\n          ]\n        }\n      ]\n    }\n  ]\n}\n",
    "negativeSkills": "You are given a JSON data containing analysis of authored merge requests of a given GitLab user over a fixed time period along with analysis of comments on those merge requests. Your task is to combine the skills identified where user is underperforming, doing mistakes etc. from both analysis into a single comprehensive list of skills. Ensure that similar skills are merged into one. you have to provide following in the final list. Limit number of skills to 5.\nfor each skill do the following.\n1) Calculate total occurrence of the skill in all merge requests.\n2) group the occurrence of these skills by sentiment (positive, negative, neutral) and the specified time period.\n3) Provide 3 to 5 detailed insights highlighting specific areas of mistake and requirement of improvements. Include 3 to 5 merge request or comments IDs to support your findings.\n4) List 1 to 3 references of learning resources for each skill to assist the user in enhancing their abilities in week areas.\nEach skill's insights should be formatted as an array with 4 to 7 brief points, each no longer than 15 words. Use markdown to **bold** important characters. Format the output as a JSON object with the 'ns' key containing an array of skill objects.\nEnsure the output is raw JSON.\nHere is an example output:\n{\n  \"ns\": [\n    {\n      \"s\": \"Typescript\",\n      \"f\": {\n        \"2024-01-01T00:00:00.000+05:30\": 0,\n        \"2024-02-01T00:00:00.000+05:30\": 1,\n        \"2024-03-01T00:00:00.000+05:30\": 6\n      },\n      \"sf\": {\n        \"2024-01-01T00:00:00.000+05:30\": { \"p\": 0, \"n\": 0, \"ex\": 0 },\n        \"2024-02-01T00:00:00.000+05:30\": { \"p\": 0, \"n\": 1, \"ex\": 0 },\n        \"2024-03-01T00:00:00.000+05:30\": { \"p\": 1, \"n\": 0, \"ex\": 5 }\n      },\n      \"i\": [\n        {\n          \"t\": \"Your **interface definations** are causing clashes for other users definations.\",\n          \"ids\": [\"gid://gitlab/MergeRequest/314018479\"]\n        },\n        {\n          \"t\": \"your logics in recent merge requests are not **performance optimised**\",\n          \"ids\": [\n            \"gid://gitlab/DiffNote/1947434380\",\n            \"gid://gitlab/MergeRequest/308394629\"\n          ]\n        }\n      ],\n      \"refs\": [\n        {\n          \"te\": \"TypeScriptâ€™s Logical Toolbox\",\n          \"url\": \"https://medium.com/codex/typescripts-logical-toolbox-a-step-by-step-guide-to-logical-statements-such-as-if-else-if-and-cb15796e2482\",\n          \"s\": \"Typescript\",\n          \"de\": \" A Step-by-Step Guide to Logical Statements such as if, else if, and else; Implementation of Logical Operators; and Enhancing Code Efficiency via Conditional Ternary Operators\"\n        }\n      ]\n    }\n  ]\n}",
    "insight": "You are given a JSON formatted dataset containing an analysis of authored merge requests by a GitLab user and comments on those merge requests over a fixed time period. Combine the insights from both analyses into a single comprehensive report. Ensure that similar insights and points are merged into one. Provide the output as a JSON object that can be easily parsed directly, with no formatting or newlines. Limit the total number of insights to 5. Use markdown to bold necessary characters between ** and **. Ensure that there are no ids or urls in insight text. The structure should follow the example format provided below, but ensure the output is raw JSON:\n{\n  \"i\": [\n    {\n      \"t\": \"Insight text here.\",\n      \"ids\": [\"Merge request ID 1\", \"Merge request ID 2\"]\n    }\n  ]\n}",
    "actions": "You are given a JSON formatted dataset containing an analysis of authored merge requests by a GitLab user and comments on those merge requests over a fixed time period. Combine the actions suggested from both analyses into a single comprehensive report. Ensure that similar actions are merged into one. Provide the output as a JSON object that can be easily parsed directly, with no formatting or newlines. Limit the total number of actions to 5. Use markdown to bold necessary characters between ** and **. The structure should follow the example format provided below, but ensure the output is raw JSON:\n{\n  \"a\": [\n    {\n      \"t\": \"Action text here.\",\n      \"refs\": [\n        {\n          \"te\": \"Reference title\",\n          \"url\": \"Reference URL\",\n          \"s\": \"Skill name\",\n          \"de\": \"Reference description\"\n        }\n      ]\n    }\n  ]\n}"
  },

  "analysis": {
    "comment": "You are an expert at analyzing GitLab comments to extract detailed technical information. Your task is to review each comment and provide a structured analysis. For each comment, return the following information in JSON format: 1. Type of Feedback to Merge Request Author: Categorize as \"Positive,\" \"Negative,\" or \"Neutral.\" \"Positive\" for appreciation or positive feedback, \"Negative\" for mistakes or negative sentiment, and \"Neutral\" for general discussions or references. 2. Keywords: Extract and list keywords of significant technical importance from the comment. Limit keywords to a maximum of 2 words. 3. Skills: Identify relevant skills from the comment, including concepts of programming languages (e.g., encapsulation, generic classes, conditional statements), frameworks (e.g., hooks in React, data fetching), and other specific technical concepts. Provide feedback for each skill indicating if it is \"Positive,\" \"Negative,\" or \"Neutral.\" 4. Summary: A brief summary of the comment, highlighting any mistakes or improvements. Output the analysis in a compact JSON format suitable for direct parsing without additional spaces or newlines: [ {\"id\":\"\",\"feedback\":\"\",\"keywords\":[],\"skills\":[{\"skill\":\"\",\"feedback\":\"\"}],\"summary\":\"\"} ]",
    "mergeRequest": "You are given a list of GitLab's merge request information. For each merge request, the provided information includes: - ID - Title - Description - List of labels - Upvotes - Downvotes - Conflicts - List of changes in files as diffstats Your task is to analyze this information and provide the following details: 1. Impact of Merge Request to Repository: This can be \"Positive,\" \"Negative,\" or \"Neutral.\" You can use vote counts along with other relevant information to determine the impact. 2. Quality of merge request: This can be \"High,\" \"Medium,\" or \"Low\". Consider how well the user described the changes made. 3. Keywords: Extract keywords with highly significant technical importance and relevance to developers, if any. 4. Skills: Identify skills relevant to the merge request. The skills must be relevant from a developer's perspective, including concepts of programming languages (e.g., encapsulation, generic classes, conditional statements), frameworks (e.g., hooks in React, data fetching), and other specific technical concepts. For each skill, provide feedback type for the merge request author, which can be one of \"Positive,\" \"Negative,\" or \"Neutral.\" 5. Test Analysis: - testRequired: A boolean value indicating if there is a need to add tests based on the changes in the merge request. - tests: An object indicating the count of added, modified, or removed tests. Format: {added: 0, removed: 0, modified: 0}. Use changes in diffs to determine this. 6. Summary: A very short description of user learning, mentioning any mistakes or improvements the user made. Output should be in the following JSON format for each merge request: [ {\"id\":\"\",\"keywords\":[],\"quality\":\"\",\"skills\":[{\"skill\":\"\",\"feedback\":\"\"}],\"impact\":\"\",\"testRequired\":false,\"tests\":{\"added\":0,\"removed\":0,\"modified\":0},\"summary\":\"\"} ] Note: Make the JSON as small as possible. There is no need to add additional spaces or newlines, ensuring that it can be directly parsed using the JSON.parse() method of JavaScript.",
    "formal": "You are given a list of comments along with an ID. Your task is to analyze each comment and rewrite it in a more formal way while maintaining the sentiment, nuances, emotions, or specific details that could be important. Notes: 1. Make the JSON list as small as possible, with no additional spaces or newlines, and ensure that it can be parsed by the default TypeScript JSON parser. 2. If there are URLs or code in the comment, format them so they are easy to understand near the end of the comment. Output a list in the following JSON format: [{\"id\":\"\",\"body\":\"\"}] Ensure the output JSON list is minimal and correctly formatted."
  }
}
